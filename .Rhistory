new_file_name = glue::glue("{processed_dir}/CeNDR/{strain_name}.jpg"),
thumb_file_name = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}.jpg")) %>%
dplyr::mutate(orig_file_name2 = glue::glue("{dir}/{sample_photo2}.jpg"),
new_file_name2 = glue::glue("{processed_dir}/CeNDR/{strain_name}_2.jpg"),
thumb_file_name2 = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}_2.jpg")) %>%
dplyr::mutate(orig_file_name3 = glue::glue("{dir}/{sample_photo3}.jpg"),
new_file_name3 = glue::glue("{processed_dir}/CeNDR/{strain_name}_3.jpg"),
thumb_file_name3 = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}_3.jpg")) %>%
dplyr::select(strain_name, species_id, c_label, sample_photo1, sample_photo2, sample_photo3, orig_file_name:thumb_file_name3)
to_change1 <- to_change %>%
dplyr::filter(!is.na(sample_photo1))
to_change2 <- to_change %>%
dplyr::filter(!is.na(sample_photo2))
to_change3 <- to_change %>%
dplyr::filter(!is.na(sample_photo3))
to_change
to_change2
fs::dir_create(glue::glue("{processed_dir}/CeNDR"))
fs::dir_create(glue::glue("{processed_dir}/CeNDR/thumbnails"))
# copy files to new directory and rename
fs::file_copy(to_change1$orig_file_name, to_change1$new_file_name, overwrite = overwrite)
fs::file_copy(to_change2$orig_file_name2, to_change2$new_file_name2, overwrite = overwrite)
fs::file_copy(to_change3$orig_file_name3, to_change3$new_file_name3, overwrite = overwrite)
# loop through renamed images to make thumbnails
for(i in unique(to_change1$new_file_name)) {
# Make message
message(glue::glue("Processing collection photo:{to_change1 %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(orig_file_name)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change1 %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(thumb_file_name)}"))
}
for(i in unique(to_change2$new_file_name2)) {
# Make message
message(glue::glue("Processing collection photo:{to_change2 %>% dplyr::filter(new_file_name2 == i) %>% dplyr::pull(orig_file_name2)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change %>% dplyr::filter(new_file_name2 == i) %>% dplyr::pull(thumb_file_name2)}"))
}
for(i in unique(to_change3$new_file_name3)) {
# Make message
message(glue::glue("Processing collection photo:{to_change3 %>% dplyr::filter(new_file_name3 == i) %>% dplyr::pull(orig_file_name3)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change %>% dplyr::filter(new_file_name3 == i) %>% dplyr::pull(thumb_file_name3)}"))
}
# make a md5 hash for sample photos and thubnails integrity
message("Writing md5 hash for raw images and adding to data frame.")
raw_hash <- dplyr::as_tibble(as.list(tools::md5sum(fs::dir_ls(glue::glue("{dir}"), type = "file")))) %>%
tidyr::gather(key = raw_file, value = sample_photo_raw_photo_hash) %>%
dplyr::mutate(sample_photo_raw_file_name = stringr::str_extract(raw_file, pattern = ".{36}" %R% ".jpg"),
sample_photo = stringr::str_replace(sample_photo_raw_file_name, pattern = ".jpg", replacement = "")) %>%
dplyr::select(-raw_file)
# get hash 1
raw_hash1 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo1)
# get hash 2
raw_hash2 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo2)
# get hash 3
raw_hash3 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo3)
message("Writing md5 hash for resized images and adding to data frame.")
thumb_hash <- dplyr::as_tibble(as.list(tools::md5sum(fs::dir_ls(glue::glue("{processed_dir}/CeNDR/thumbnails"))))) %>%
tidyr::gather(key = thumb_file, value = sample_photo_resized_hash) %>%
dplyr::mutate(sample_photo_resized_file_name = stringr::str_extract(thumb_file, pattern = one_or_more(WRD) %R% optional("_") %R% optional(DGT) %R% ".jpg"),
strain_name = stringr::str_extract(sample_photo_resized_file_name, pattern = ALPHA %R% ALPHA %R% optional(ALPHA) %R% optional(ALPHA) %R% DGT %R% optional(DGT) %R% optional(DGT) %R% optional(DGT) %R% optional(DGT)),
sample_photo_processed_file_name = sample_photo_resized_file_name)
# get hash 1
thumb_hash1 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change1$strain_name)
# get hash 2
thumb_hash2 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change2$strain_name)
# get hash 3
thumb_hash3 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change3$strain_name)
# join hash to data frame
data_out <- data %>%
dplyr::left_join(dplyr::select(raw_hash1, sample_photo1_hash = sample_photo_raw_photo_hash,
sample_photo1_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo1" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(raw_hash2, sample_photo2_hash = sample_photo_raw_photo_hash,
sample_photo2_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo2" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(raw_hash3, sample_photo3_hash = sample_photo_raw_photo_hash,
sample_photo3_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo3" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(thumb_hash1, sample_photo1_resized_hash = sample_photo_resized_hash,
sample_photo1_processed_file_name = sample_photo_processed_file_name,
sample_photo1_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name")) %>%
dplyr::left_join(dplyr::select(thumb_hash2, sample_photo2_resized_hash = sample_photo_resized_hash,
sample_photo2_processed_file_name = sample_photo_processed_file_name,
sample_photo2_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name")) %>%
dplyr::left_join(dplyr::select(thumb_hash3, sample_photo3_resized_hash = sample_photo_resized_hash,
sample_photo3_processed_file_name = sample_photo_processed_file_name,
sample_photo3_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name"))  %>%
dplyr::mutate(sample_photo1_processed_url = ifelse(!is.na(sample_photo1_processed_file_name), glue::glue("{project_url}","{sample_photo1_processed_file_name}"), NA),
sample_photo2_processed_url = ifelse(!is.na(sample_photo2_processed_file_name), glue::glue("{project_url}","{sample_photo2_processed_file_name}"), NA),
sample_photo3_processed_url = ifelse(!is.na(sample_photo3_processed_file_name), glue::glue("{project_url}","{sample_photo3_processed_file_name}"), NA)) %>%
dplyr::select(project:sample_photo1, sample_photo1_raw_file_name, sample_photo1_processed_file_name, sample_photo1_hash, sample_photo1_resized_file_name, sample_photo1_resized_hash,
sample_photo2, sample_photo2_raw_file_name, sample_photo2_processed_file_name, sample_photo2_hash, sample_photo2_resized_file_name, sample_photo2_resized_hash,
sample_photo3, sample_photo3_raw_file_name, sample_photo3_processed_file_name, sample_photo3_hash, sample_photo3_resized_file_name, sample_photo3_resized_hash,
everything())
library(rebus)
dir <- dir1
data <- joingeno_data1
project_url <- glue::glue("{pub_url}",tail(strsplit(dir,"/")[[1]],1),"/sampling_thumbs/")
# edit dir to be appropriate for path to photos
dir <- glue::glue("{dir}","/data/raw/fulcrum/photos")
# make processed dir path
processed_dir <- stringr::str_replace(dir, pattern = "raw/fulcrum/photos", replacement = "processed/fulcrum")
# find file names for photos where CeNDR criteria is satisfied
to_change <- data %>%
dplyr::filter(!is.na(strain_name)) %>%
dplyr::filter(species_id == "C. elegans" | species_id == "C. briggsae" | species_id == "C. tropicalis"  ) %>%
dplyr::mutate(orig_file_name = glue::glue("{dir}/{sample_photo1}.jpg"),
new_file_name = glue::glue("{processed_dir}/CeNDR/{strain_name}.jpg"),
thumb_file_name = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}.jpg")) %>%
dplyr::mutate(orig_file_name2 = glue::glue("{dir}/{sample_photo2}.jpg"),
new_file_name2 = glue::glue("{processed_dir}/CeNDR/{strain_name}_2.jpg"),
thumb_file_name2 = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}_2.jpg")) %>%
dplyr::mutate(orig_file_name3 = glue::glue("{dir}/{sample_photo3}.jpg"),
new_file_name3 = glue::glue("{processed_dir}/CeNDR/{strain_name}_3.jpg"),
thumb_file_name3 = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}_3.jpg")) %>%
dplyr::select(strain_name, species_id, c_label, sample_photo1, sample_photo2, sample_photo3, orig_file_name:thumb_file_name3)
to_change1 <- to_change %>%
dplyr::filter(!is.na(sample_photo1))
to_change2 <- to_change %>%
dplyr::filter(!is.na(sample_photo2))
to_change3 <- to_change %>%
dplyr::filter(!is.na(sample_photo3))
# make processed subdirectory in dir and a thumbnails directory below that
fs::dir_create(glue::glue("{processed_dir}/CeNDR"))
fs::dir_create(glue::glue("{processed_dir}/CeNDR/thumbnails"))
# copy files to new directory and rename
fs::file_copy(to_change1$orig_file_name, to_change1$new_file_name, overwrite = overwrite)
fs::file_copy(to_change2$orig_file_name2, to_change2$new_file_name2, overwrite = overwrite)
fs::file_copy(to_change3$orig_file_name3, to_change3$new_file_name3, overwrite = overwrite)
# loop through renamed images to make thumbnails
for(i in unique(to_change1$new_file_name)) {
# Make message
message(glue::glue("Processing collection photo:{to_change1 %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(orig_file_name)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change1 %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(thumb_file_name)}"))
}
for(i in unique(to_change2$new_file_name2)) {
# Make message
message(glue::glue("Processing collection photo:{to_change2 %>% dplyr::filter(new_file_name2 == i) %>% dplyr::pull(orig_file_name2)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change %>% dplyr::filter(new_file_name2 == i) %>% dplyr::pull(thumb_file_name2)}"))
}
for(i in unique(to_change3$new_file_name3)) {
# Make message
message(glue::glue("Processing collection photo:{to_change3 %>% dplyr::filter(new_file_name3 == i) %>% dplyr::pull(orig_file_name3)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change %>% dplyr::filter(new_file_name3 == i) %>% dplyr::pull(thumb_file_name3)}"))
}
# make a md5 hash for sample photos and thubnails integrity
message("Writing md5 hash for raw images and adding to data frame.")
raw_hash <- dplyr::as_tibble(as.list(tools::md5sum(fs::dir_ls(glue::glue("{dir}"), type = "file")))) %>%
tidyr::gather(key = raw_file, value = sample_photo_raw_photo_hash) %>%
dplyr::mutate(sample_photo_raw_file_name = stringr::str_extract(raw_file, pattern = ".{36}" %R% ".jpg"),
sample_photo = stringr::str_replace(sample_photo_raw_file_name, pattern = ".jpg", replacement = "")) %>%
dplyr::select(-raw_file)
# get hash 1
raw_hash1 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo1)
# get hash 2
raw_hash2 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo2)
# get hash 3
raw_hash3 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo3)
message("Writing md5 hash for resized images and adding to data frame.")
thumb_hash <- dplyr::as_tibble(as.list(tools::md5sum(fs::dir_ls(glue::glue("{processed_dir}/CeNDR/thumbnails"))))) %>%
tidyr::gather(key = thumb_file, value = sample_photo_resized_hash) %>%
dplyr::mutate(sample_photo_resized_file_name = stringr::str_extract(thumb_file, pattern = one_or_more(WRD) %R% optional("_") %R% optional(DGT) %R% ".jpg"),
strain_name = stringr::str_extract(sample_photo_resized_file_name, pattern = ALPHA %R% ALPHA %R% optional(ALPHA) %R% optional(ALPHA) %R% DGT %R% optional(DGT) %R% optional(DGT) %R% optional(DGT) %R% optional(DGT)),
sample_photo_processed_file_name = sample_photo_resized_file_name)
# get hash 1
thumb_hash1 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change1$strain_name)
# get hash 2
thumb_hash2 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change2$strain_name)
# get hash 3
thumb_hash3 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change3$strain_name)
# join hash to data frame
data_out <- data %>%
dplyr::left_join(dplyr::select(raw_hash1, sample_photo1_hash = sample_photo_raw_photo_hash,
sample_photo1_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo1" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(raw_hash2, sample_photo2_hash = sample_photo_raw_photo_hash,
sample_photo2_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo2" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(raw_hash3, sample_photo3_hash = sample_photo_raw_photo_hash,
sample_photo3_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo3" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(thumb_hash1, sample_photo1_resized_hash = sample_photo_resized_hash,
sample_photo1_processed_file_name = sample_photo_processed_file_name,
sample_photo1_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name")) %>%
dplyr::left_join(dplyr::select(thumb_hash2, sample_photo2_resized_hash = sample_photo_resized_hash,
sample_photo2_processed_file_name = sample_photo_processed_file_name,
sample_photo2_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name")) %>%
dplyr::left_join(dplyr::select(thumb_hash3, sample_photo3_resized_hash = sample_photo_resized_hash,
sample_photo3_processed_file_name = sample_photo_processed_file_name,
sample_photo3_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name"))  %>%
dplyr::mutate(sample_photo1_processed_url = ifelse(!is.na(sample_photo1_processed_file_name), glue::glue("{project_url}","{sample_photo1_processed_file_name}"), NA),
sample_photo2_processed_url = ifelse(!is.na(sample_photo2_processed_file_name), glue::glue("{project_url}","{sample_photo2_processed_file_name}"), NA),
sample_photo3_processed_url = ifelse(!is.na(sample_photo3_processed_file_name), glue::glue("{project_url}","{sample_photo3_processed_file_name}"), NA)) %>%
dplyr::select(project:sample_photo1, sample_photo1_raw_file_name, sample_photo1_processed_file_name, sample_photo1_hash, sample_photo1_resized_file_name, sample_photo1_resized_hash,
sample_photo2, sample_photo2_raw_file_name, sample_photo2_processed_file_name, sample_photo2_hash, sample_photo2_resized_file_name, sample_photo2_resized_hash,
sample_photo3, sample_photo3_raw_file_name, sample_photo3_processed_file_name, sample_photo3_hash, sample_photo3_resized_file_name, sample_photo3_resized_hash,
everything())
View(data_out)
dim(data)
test <- data %>% distinct(c_label)
dim(test)
sum(unique(test$c_label))
unique(test$c_label)
length(unique(test$c_label))
distinct()
?distinct
to_change <- data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::distinct(c_label, keep_all = TRUE)
dim(to_change)
data <- joingeno_data1
to_change <- data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::distinct(c_label, keep_all = TRUE)
dim(to_change)
data <- joingeno_data1
dim(data)
data %>%
+     dplyr::filter(!is.na(c_label))
data %>% dplyr::filter(!is.na(c_label))
to_change <- data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::select(dplyr::distinct(c_label))
data <- joingeno_data1
to_change <- data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::select(dplyr::distinct(c_label))
data <- joingeno_data1
names(data)
to_change <- data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::select(dplyr::distinct(c_label))
data %>%
dplyr::filter(!is.na(c_label))
dplyr::select(dplyr::distinct(c_label))
dplyr::select(data, dplyr::distinct(c_label))
?select
dplyr::distinct(data, c_label)
data[!duplicated(data$c_label), ]
data
dim(data)
data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::distinct(c_label, keep_all = TRUE)
data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::distinct(c_label, .keep_all = TRUE)
to_change <- data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::distinct(c_label, .keep_all = TRUE)
View(to_change)
dir <- dir1
data <- joingeno_data1
# edit pub_url to take into accoutn project name and subfolder
project_url <- glue::glue("{pub_url}",tail(strsplit(dir,"/")[[1]],1),"/sampling_thumbs/")
# edit dir to be appropriate for path to photos
dir <- glue::glue("{dir}","/data/raw/fulcrum/photos")
# make processed dir path
processed_dir <- stringr::str_replace(dir, pattern = "raw/fulcrum/photos", replacement = "processed/fulcrum")
# find file names for photos where CeNDR criteria is satisfied, create folder of these images and thumbnails
to_change <- data %>%
dplyr::filter(!is.na(strain_name)) %>%
dplyr::filter(species_id == "C. elegans" | species_id == "C. briggsae" | species_id == "C. tropicalis"  ) %>%
dplyr::mutate(orig_file_name = glue::glue("{dir}/{sample_photo1}.jpg"),
new_file_name = glue::glue("{processed_dir}/CeNDR/{strain_name}.jpg"),
thumb_file_name = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}.jpg")) %>%
dplyr::mutate(orig_file_name2 = glue::glue("{dir}/{sample_photo2}.jpg"),
new_file_name2 = glue::glue("{processed_dir}/CeNDR/{strain_name}_2.jpg"),
thumb_file_name2 = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}_2.jpg")) %>%
dplyr::mutate(orig_file_name3 = glue::glue("{dir}/{sample_photo3}.jpg"),
new_file_name3 = glue::glue("{processed_dir}/CeNDR/{strain_name}_3.jpg"),
thumb_file_name3 = glue::glue("{processed_dir}/CeNDR/thumbnails/{strain_name}_3.jpg")) %>%
dplyr::select(strain_name, species_id, c_label, sample_photo1, sample_photo2, sample_photo3, orig_file_name:thumb_file_name3)
to_change1 <- to_change %>%
dplyr::filter(!is.na(sample_photo1))
to_change2 <- to_change %>%
dplyr::filter(!is.na(sample_photo2))
to_change3 <- to_change %>%
dplyr::filter(!is.na(sample_photo3))
# make processed subdirectory in dir and a thumbnails directory below that
fs::dir_create(glue::glue("{processed_dir}/CeNDR"))
fs::dir_create(glue::glue("{processed_dir}/CeNDR/thumbnails"))
# copy files to new directory and rename
fs::file_copy(to_change1$orig_file_name, to_change1$new_file_name, overwrite = overwrite)
fs::file_copy(to_change2$orig_file_name2, to_change2$new_file_name2, overwrite = overwrite)
fs::file_copy(to_change3$orig_file_name3, to_change3$new_file_name3, overwrite = overwrite)
# loop through renamed images to make thumbnails
for(i in unique(to_change1$new_file_name)) {
# Make message
message(glue::glue("Processing collection photo:{to_change1 %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(orig_file_name)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change1 %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(thumb_file_name)}"))
}
for(i in unique(to_change2$new_file_name2)) {
# Make message
message(glue::glue("Processing collection photo:{to_change2 %>% dplyr::filter(new_file_name2 == i) %>% dplyr::pull(orig_file_name2)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change %>% dplyr::filter(new_file_name2 == i) %>% dplyr::pull(thumb_file_name2)}"))
}
for(i in unique(to_change3$new_file_name3)) {
# Make message
message(glue::glue("Processing collection photo:{to_change3 %>% dplyr::filter(new_file_name3 == i) %>% dplyr::pull(orig_file_name3)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change %>% dplyr::filter(new_file_name3 == i) %>% dplyr::pull(thumb_file_name3)}"))
}
# copy all images create folder of these images and thumbnails
to_change <- data %>%
dplyr::filter(!is.na(c_label)) %>%
dplyr::distinct(c_label, .keep_all = TRUE) %>%
dplyr::mutate(orig_file_name = glue::glue("{dir}/{sample_photo1}.jpg"),
new_file_name = glue::glue("{processed_dir}/{c_label}.jpg"),
thumb_file_name = glue::glue("{processed_dir}/thumbnails/{c_label}.jpg")) %>%
dplyr::mutate(orig_file_name2 = glue::glue("{dir}/{sample_photo2}.jpg"),
new_file_name2 = glue::glue("{processed_dir}/{c_label}_2.jpg"),
thumb_file_name2 = glue::glue("{processed_dir}/thumbnails/{c_label}_2.jpg")) %>%
dplyr::mutate(orig_file_name3 = glue::glue("{dir}/{sample_photo3}.jpg"),
new_file_name3 = glue::glue("{processed_dir}/{c_label}_3.jpg"),
thumb_file_name3 = glue::glue("{processed_dir}/thumbnails/{c_label}_3.jpg")) %>%
dplyr::select(strain_name, species_id, c_label, sample_photo1, sample_photo2, sample_photo3, orig_file_name:thumb_file_name3)
to_change1 <- to_change %>%
dplyr::filter(!is.na(sample_photo1))
to_change2 <- to_change %>%
dplyr::filter(!is.na(sample_photo2))
to_change3 <- to_change %>%
dplyr::filter(!is.na(sample_photo3))
# make a thumbnails directory below main folder
fs::dir_create(glue::glue("{processed_dir}/thumbnails"))
# copy files to new directory and rename
fs::file_copy(to_change1$orig_file_name, to_change1$new_file_name, overwrite = overwrite)
fs::file_copy(to_change2$orig_file_name2, to_change2$new_file_name2, overwrite = overwrite)
fs::file_copy(to_change3$orig_file_name3, to_change3$new_file_name3, overwrite = overwrite)
# loop through renamed images to make thumbnails
for(i in unique(to_change1$new_file_name)) {
# Make message
message(glue::glue("Processing collection photo:{to_change1 %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(orig_file_name)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change1 %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(thumb_file_name)}"))
}
for(i in unique(to_change2$new_file_name2)) {
# Make message
message(glue::glue("Processing collection photo:{to_change2 %>% dplyr::filter(new_file_name2 == i) %>% dplyr::pull(orig_file_name2)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change %>% dplyr::filter(new_file_name2 == i) %>% dplyr::pull(thumb_file_name2)}"))
}
for(i in unique(to_change3$new_file_name3)) {
# Make message
message(glue::glue("Processing collection photo:{to_change3 %>% dplyr::filter(new_file_name3 == i) %>% dplyr::pull(orig_file_name3)}"))
# setup image in R
img <- imager::load.image(i)
# get raw img dimesions
raw_max_dim <- max(dim(img))
percentage <- 100*(max_dim/raw_max_dim)
# resize to make thumbnail
thumb <- imager::resize(img, -percentage, -percentage) # need negative for resize function
# write the file
imager::save.image(thumb, file = glue::glue("{to_change %>% dplyr::filter(new_file_name3 == i) %>% dplyr::pull(thumb_file_name3)}"))
}
# make a md5 hash for sample photos and thubnails integrity
message("Writing md5 hash for raw images and adding to data frame.")
raw_hash <- dplyr::as_tibble(as.list(tools::md5sum(fs::dir_ls(glue::glue("{dir}"), type = "file")))) %>%
tidyr::gather(key = raw_file, value = sample_photo_raw_photo_hash) %>%
dplyr::mutate(sample_photo_raw_file_name = stringr::str_extract(raw_file, pattern = ".{36}" %R% ".jpg"),
sample_photo = stringr::str_replace(sample_photo_raw_file_name, pattern = ".jpg", replacement = "")) %>%
dplyr::select(-raw_file)
# get hash 1
raw_hash1 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo1)
# get hash 2
raw_hash2 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo2)
# get hash 3
raw_hash3 <- raw_hash %>%
dplyr::filter(sample_photo %in% data$sample_photo3)
message("Writing md5 hash for resized images and adding to data frame.")
thumb_hash <- dplyr::as_tibble(as.list(tools::md5sum(fs::dir_ls(glue::glue("{processed_dir}/CeNDR/thumbnails"))))) %>%
tidyr::gather(key = thumb_file, value = sample_photo_resized_hash) %>%
dplyr::mutate(sample_photo_resized_file_name = stringr::str_extract(thumb_file, pattern = one_or_more(WRD) %R% optional("_") %R% optional(DGT) %R% ".jpg"),
strain_name = stringr::str_extract(sample_photo_resized_file_name, pattern = ALPHA %R% ALPHA %R% optional(ALPHA) %R% optional(ALPHA) %R% DGT %R% optional(DGT) %R% optional(DGT) %R% optional(DGT) %R% optional(DGT)),
sample_photo_processed_file_name = sample_photo_resized_file_name)
# get hash 1
thumb_hash1 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change1$strain_name)
# get hash 2
thumb_hash2 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change2$strain_name)
# get hash 3
thumb_hash3 <- thumb_hash %>%
dplyr::filter(strain_name %in% to_change3$strain_name)
# join hash to data frame
data_out <- data %>%
dplyr::left_join(dplyr::select(raw_hash1, sample_photo1_hash = sample_photo_raw_photo_hash,
sample_photo1_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo1" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(raw_hash2, sample_photo2_hash = sample_photo_raw_photo_hash,
sample_photo2_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo2" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(raw_hash3, sample_photo3_hash = sample_photo_raw_photo_hash,
sample_photo3_raw_file_name = sample_photo_raw_file_name, sample_photo), by = c("sample_photo3" = "sample_photo")) %>%
dplyr::left_join(dplyr::select(thumb_hash1, sample_photo1_resized_hash = sample_photo_resized_hash,
sample_photo1_processed_file_name = sample_photo_processed_file_name,
sample_photo1_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name")) %>%
dplyr::left_join(dplyr::select(thumb_hash2, sample_photo2_resized_hash = sample_photo_resized_hash,
sample_photo2_processed_file_name = sample_photo_processed_file_name,
sample_photo2_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name")) %>%
dplyr::left_join(dplyr::select(thumb_hash3, sample_photo3_resized_hash = sample_photo_resized_hash,
sample_photo3_processed_file_name = sample_photo_processed_file_name,
sample_photo3_resized_file_name = sample_photo_resized_file_name, strain_name), by = c("strain_name" = "strain_name"))  %>%
dplyr::mutate(sample_photo1_processed_url = ifelse(!is.na(sample_photo1_processed_file_name), glue::glue("{project_url}","{sample_photo1_processed_file_name}"), NA),
sample_photo2_processed_url = ifelse(!is.na(sample_photo2_processed_file_name), glue::glue("{project_url}","{sample_photo2_processed_file_name}"), NA),
sample_photo3_processed_url = ifelse(!is.na(sample_photo3_processed_file_name), glue::glue("{project_url}","{sample_photo3_processed_file_name}"), NA)) %>%
dplyr::select(project:sample_photo1, sample_photo1_raw_file_name, sample_photo1_processed_file_name, sample_photo1_hash, sample_photo1_resized_file_name, sample_photo1_resized_hash,
sample_photo2, sample_photo2_raw_file_name, sample_photo2_processed_file_name, sample_photo2_hash, sample_photo2_resized_file_name, sample_photo2_resized_hash,
sample_photo3, sample_photo3_raw_file_name, sample_photo3_processed_file_name, sample_photo3_hash, sample_photo3_resized_file_name, sample_photo3_resized_hash,
everything())
setwd("~/Desktop/Andersen")
library(easyfulcrum)
#first dataset has created purposeful errors
dir1 <- "git/test_easyfulcrum/test_data/2020FebruaryAustralia_errors_created"
raw_data1 <- readFulcrum(dir1)
proc_data1 <- procFulcrum(raw_data1)
join_data1 <- joinFulcrum(proc_data1)
checkJoin(join_data1)
anno_data1 <- annotateFulcrum(join_data1)
geno_data1 <- readGenotypes(gsKey = c("1CxKJHM6mEu4VvnN2T1ioXiJNZmmmpeosmECP2zeAPmY"))
proc_geno_data1 <- checkGenotypes(geno_data = geno_data1, fulc_data = anno_data1, return = FALSE)
joingeno_data1 <- joinGenoFulc(geno = proc_geno_data1, fulc = anno_data1, dir = dir1)
final_data1 <- procPhotos(dir = dir1, data = joingeno_data1, max_dim = 500, overwrite = T)
View(final_data1)
