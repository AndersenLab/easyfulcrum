jpeg(file = glue::glue("{to_change %>% dplyr::filter(new_file_name == i) %>% dplyr::pull(thumb_file_name)}"), height = h*size, width = w*size)
par(mar=c(0,0,0,0), xaxs="i", yaxs="i", ann=FALSE)
plot(1:2, type='n', xaxt = "n", yaxt = "n", xlab = "", ylab = "")
lim <- par()
rasterImage(img, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
dev.off()
}
}
# setup test directory for multi project Fulcrum export
dir1 <- "/Users/matteodibernardo/Desktop/Andersen/git/easyfulcrum/test_data/2020FebruaryAustralia/data/fulcrum"
# test readFulcrum function
raw_data1 <- readFulcrum(dir1)
# test procFulcrum function
proc_data1 <- procFulcrum(raw_data1)
# test joinFulcrum function
join_data1 <- joinFulcrum(proc_data1)
# test annotateFulcrum fuction
anno_data1 <- annotateFulcrum(join_data1)
anno_data1$collection_island
setwd("~/Desktop/Andersen/git/easyfulcrum/R")
setwd("~/Desktop/Andersen/git/easyfulcrum")
# setup test directory for multi project Fulcrum export
dir1 <- "test_data/20191201_Hawaii/data/fulcrum"
# test readFulcrum function
raw_data1 <- readFulcrum(dir1)
# test procFulcrum function
proc_data1 <- procFulcrum(raw_data1)
# test joinFulcrum function
join_data1 <- joinFulcrum(proc_data1)
# test annotateFulcrum fuction
anno_data1 <- annotateFulcrum(join_data1)
anno_data1$collection_island
joined_data <- join_data1
# import island csv, this will have to change once we implement CI
island <- read.csv("/Users/matteodibernardo/Desktop/Andersen/git/easyfulcrum/test_data/island.csv", header = TRUE)
# Create Island Column
joined_data$collection_island <- NA_character_
# Loop through imported island longitude and latitudes to assign values to Island Column
for (i in 1:nrow(island)){
joined_data[filter_box(joined_data$collection_longitude, joined_data$collection_latitude, c(island$long_start[i], island$lat_start[i], island$long_end[i], island$lat_end[i])), "collection_island"] <- island$island_name[i]
}
# import location csv, this will have to change once we implement CI
location <- read.csv("/Users/matteodibernardo/Desktop/Andersen/git/easyfulcrum/test_data/location.csv", header = TRUE)
# Create location Column
joined_data$collection_location <- NA_character_
for (i in 1:nrow(location)){
joined_data[filter_box(joined_data$collection_longitude, joined_data$collection_latitude, c(location$long_start[i], location$lat_start[i], location$long_end[i], location$lat_end[i])), "collection_location"] <- location$location_name[i]
}
joined_data$collection_location
# Generate list of trails and geojson polygon points from geojson output of https://boundingbox.klokantech.com/.
# These polygons are manually curated by using the polygon tool.
trails <- list("Awa'awapuhi Trail" = "[-159.6488926467,22.1402223841],[-159.6532089915,22.1412257815],[-159.656343488,22.1420138052],[-159.6650299896,22.1463072536],[-159.6725416835,22.1492227365],[-159.6773686539,22.1507348759],[-159.6798696462,22.1518023226],[-159.6818598453,22.1533145895],[-159.6820020024,22.1540193252],[-159.6809810866,22.1541002166],[-159.6723866183,22.1519254472],[-159.6573152859,22.1456304282],[-159.648068035,22.1412422407],[-159.6488926467,22.1402223841]",
"Pu'u Ka Ohelo Berry Flat Trail" = "[-159.6464149561,22.1279373294],[-159.6464691032,22.1306906065],[-159.6478631813,22.1337821946],[-159.652014235,22.1315567984],[-159.6519369539,22.1323409165],[-159.6519060247,22.1332212292],[-159.648132408,22.136480155],[-159.6419800911,22.1382322604],[-159.639415564,22.1374220881],[-159.6382828336,22.1306384299],[-159.6423470508,22.1293568345],[-159.6464149561,22.1279373294]",
"Aiea Loop Trail" = "[-157.9036597069,21.3911540403],[-157.9032877181,21.3961755202],[-157.9006033298,21.3986954823],[-157.896204507,21.4022200787],[-157.8944614064,21.4032046156],[-157.8827647958,21.4059746435],[-157.8808381315,21.4035239487],[-157.8839969356,21.4007159471],[-157.8972629737,21.3924647207],[-157.9036597069,21.3911540403]",
"Ualaka`a Trail" = "[-157.819537418,21.315974292],[-157.8210766707,21.3162514153],[-157.821027888,21.3180327534],[-157.8204963915,21.3199065201],[-157.8204103094,21.3214570035],[-157.8195493203,21.3216686057],[-157.8190909978,21.3211096942],[-157.8183983173,21.3227361381],[-157.8169985395,21.3239863716],[-157.8155018669,21.3245350437],[-157.8139766958,21.3248923392],[-157.8137935512,21.3266497583],[-157.8121093754,21.3282114919],[-157.81050466,21.3288251092],[-157.8102066834,21.3262350786],[-157.8169378545,21.3223209008],[-157.8174900543,21.3200495678],[-157.8174123541,21.317614926],[-157.8189980425,21.3167357746],[-157.8190004732,21.3163345756],[-157.819537418,21.315974292]",
"Wa'ahila Ridge Trail" = "[-157.7976712119,21.3056033836],[-157.7987690736,21.3057559723],[-157.7980324719,21.3084880175],[-157.7944368031,21.3144206272],[-157.7901313547,21.3208797418],[-157.7878303546,21.3269979915],[-157.7816081326,21.3348734629],[-157.7798913512,21.3357678864],[-157.7770589385,21.3357519592],[-157.7820592467,21.3306206609],[-157.7863646951,21.3232067337],[-157.7895887103,21.3147499927],[-157.7944440115,21.3088634687],[-157.7976712119,21.3056033836]",
"Wiliwilinui Ridge Trail" = "[-157.7610354219,21.2980014303],[-157.7636727039,21.2980178301],[-157.7656396013,21.3032706853],[-157.7655542735,21.3067857077],[-157.7571375016,21.324271483],[-157.7542390395,21.3277997446],[-157.7481931727,21.327357194],[-157.7475859877,21.326016573],[-157.7508203965,21.317912309],[-157.7549794968,21.3108024385],[-157.7585446555,21.30330364],[-157.7603906859,21.3009099537],[-157.7610354219,21.2980014303]",
"Kalopa State Recreation Area" = "[-155.4445436339,20.0258025884],[-155.453435995,20.0282838619],[-155.4542096446,20.032764671],[-155.4505063522,20.0361599209],[-155.4452068101,20.041061784],[-155.4429866116,20.0424226244],[-155.4317761513,20.0372755906],[-155.4366200532,20.0294838493],[-155.4445436339,20.0258025884]",
"Kipuka Puaulu Trail" = "[-155.3014187816,19.4369739997],[-155.3037875074,19.4375076905],[-155.3063687983,19.439252133],[-155.3066034916,19.442442035],[-155.3056325319,19.4446149707],[-155.3023801858,19.4453876473],[-155.2996805425,19.4445240766],[-155.2984629872,19.4429099473],[-155.2977664511,19.4410944082],[-155.2980630028,19.4391639233],[-155.2992270815,19.4379103288],[-155.3014187816,19.4369739997]",
"Manuka Nature Trail" = "[-155.8248741667,19.1080109154],[-155.8269825506,19.1095439203],[-155.8271397951,19.1100389204],[-155.827794757,19.1150164005],[-155.8279053981,19.1171844974],[-155.8258975971,19.1192328223],[-155.8215480599,19.122471411],[-155.8204518746,19.122596379],[-155.8179482001,19.1211388884],[-155.8166575546,19.1174307983],[-155.8166456523,19.1151944365],[-155.8232769112,19.1102486416],[-155.8248741667,19.1080109154]",
"Kaloko Loop Trial" = "[-155.9489068876,19.7179298978],[-155.9554239011,19.7181607717],[-155.9569940831,19.7189532045],[-155.956992239,19.7236042001],[-155.9479893207,19.7263051335],[-155.9465989306,19.7213376595],[-155.946744608,19.7198175933],[-155.9471745158,19.7191565394],[-155.9489068876,19.7179298978]",
"Kahakapao Loop Trail" = "[-156.2674384865,20.8117053473],[-156.2753739695,20.8119787889],[-156.2762706655,20.8172152958],[-156.2790301557,20.8205754146],[-156.2802150215,20.8267645811],[-156.2787543911,20.831007382],[-156.2759664024,20.832625409],[-156.2715335491,20.8303936647],[-156.2711030546,20.8245575065],[-156.2684174928,20.8211622211],[-156.2669984366,20.8141752356],[-156.2674384865,20.8117053473]",
"Waiakoa Loop Trail" = "[-156.3012763972,20.7179902338],[-156.3004486005,20.7195553775],[-156.3016750405,20.7222070847],[-156.287940454,20.7386961116],[-156.2792755778,20.7336055103],[-156.2970405186,20.7188187491],[-156.3000952194,20.7187074235],[-156.3012763972,20.7179902338]",
"Haleakala Ridge Trail" = "[-156.355557686,20.6479903804],[-156.3674029916,20.6545517867],[-156.3645618617,20.6586474239],[-156.3580511345,20.6752390367],[-156.3508014589,20.6832377485],[-156.3347209453,20.6839732952],[-156.326998195,20.6800546254],[-156.3205391004,20.6805991612],[-156.3176278978,20.6786775934],[-156.3230308725,20.6635868257],[-156.3315844371,20.648626329],[-156.355557686,20.6479903804]",
"Waihe'e Ridge Trail" = "[-156.5541882254,20.9408518775],[-156.556302812,20.944586389],[-156.5573579259,20.948246912],[-156.5538670309,20.9503162789],[-156.5443867631,20.9519885971],[-156.5359083004,20.9533659519],[-156.5318087116,20.953163686],[-156.5300669521,20.9531630598],[-156.5307745524,20.950061093],[-156.5356600285,20.9451949429],[-156.5444627032,20.9410087561],[-156.5541882254,20.9408518775]",
"Phallic Rock" = "[-157.0077103749,21.1748246808],[-157.0092100231,21.1752497522],[-157.0092106936,21.175967138],[-157.0085473917,21.1763918935],[-157.0070383977,21.1763859925],[-157.0057461597,21.1758722527],[-157.0051755197,21.1755982262],[-157.0055008214,21.1752116103],[-157.0062635746,21.1749420767],[-157.0077103749,21.1748246808]",
"Molokai Forest Reserve Road" = "[-156.9191520475,21.1151045779],[-156.9255467691,21.1288975083],[-156.9492474385,21.1339765688],[-156.9545018859,21.1364871072],[-156.9804562815,21.1367310287],[-156.996150557,21.1308029973],[-157.0065642335,21.1309524832],[-157.0143915899,21.1325117557],[-157.0243982412,21.1359442241],[-157.0366881229,21.1287989964],[-157.0533184893,21.1223852608],[-157.0536266081,21.1251086616],[-157.0231476612,21.1395223376],[-157.0147000439,21.1369099042],[-156.9970423914,21.1359310898],[-156.9818228669,21.1419814979],[-156.9514428265,21.1402665944],[-156.938153822,21.1368961445],[-156.9247146137,21.1335287453],[-156.9217293151,21.1327247237],[-156.9156353362,21.1231355458],[-156.917111557,21.1154433023],[-156.9191520475,21.1151045779]",
"Pepe'opae Bog Trail" = "[-156.9161409326,21.1143839651],[-156.9168440066,21.1161757949],[-156.9160198979,21.1177427291],[-156.8974848278,21.1232737805],[-156.8935822137,21.1213979062],[-156.8911642022,21.1170399565],[-156.9012184627,21.1149347463],[-156.9134674408,21.1149384995],[-156.9161409326,21.1143839651]",
"Manoa Falls Trail" = "[-157.800434656,21.3320734516], 	[-157.8010582696,21.3322249197], 	[-157.8014771133,21.3330526825], 	[-157.8012557473,21.3341031116], 	[-157.8008915536,21.3350359526], 	[-157.8004235081,21.3361521841], 	[-157.8002073388,21.3369723516], 	[-157.8000125434,21.337800478], 	[-157.8003042336,21.3384155385], 	[-157.8006628952,21.3390400433], 	[-157.800430968,21.3399587999], 	[-157.8000117052,21.341347932], 	[-157.7996431529,21.3425639681], 	[-157.798469435,21.342660932], 	[-157.7993015065,21.3410165964], 	[-157.7994287438,21.3390842325], 	[-157.7991028554,21.3381653924], 	[-157.7992583397,21.3368521179], 	[-157.7999583963,21.3351283931], 	[-157.8004301298,21.3340607948], 	[-157.8002174809,21.3330285571], 	[-157.800434656,21.3320734516]"
)
trails
trails_df <- read.csv("/Users/matteodibernardo/Desktop/Andersen/git/easyfulcrum/test_data/trails.csv", header = TRUE)
trails <- list(trails_df$coordinates)
names(trails) <- trails_df$trail_name
trails
str(trails)
trails_df
View(trails_df)
as.list(trails_df$coordinates)
str(as.list(trails_df$coordinates))
trails <- as.list(trails_df$coordinates)
names(trails) <- trails_df$trail_name
str(trails)
# Make dataframe with trail specific polygon points
trail_coordinates <- NULL
for(i in 1:length(trails)){
longs <- as_tibble(str_match_all(trails,  "(?<=\\[).+?(?=,)")[[i]]) %>%
dplyr::rename(longitudes = V1) %>%
dplyr::mutate(longitudes = as.numeric(longitudes))
lats <- as_tibble(str_match_all(trails,  "(?<=[0-9],).+?(?=\\])")[[i]]) %>%
dplyr::rename(latitudes = V1) %>%
dplyr::mutate(latitudes = as.numeric(latitudes))
long_lats <- bind_cols(longs, lats) %>%
dplyr::mutate(trail = names(trails)[i])
trail_coordinates <- rbind(trail_coordinates, long_lats)
}
trail_coordinates
?list
trail_polygons <-  sp::SpatialPolygons(list())
trail_polygons
trail_polygons <-  sp::SpatialPolygons(list())
for(i in 1:length(trails)){
trail_polygons[[i]] <- sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
}
sp
cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes)))
cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))
cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))
cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes)
sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))
list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes)))
i <- 1
list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}")) %>% .$latitudes)))
i <- 2
list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}")) %>% .$latitudes)))
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
}
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
trail_polygons[[i]] <- sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
for(i in 1:length(trails)){
trail_polygons[[i]] = sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
}
length(trail_polygons)
trail_polygons2
for(i in 1:length(trails)){
trail_polygons2[[i]] = sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
}
trail_polygons <-  vector('list', length = length(trails))
for(i in 1:length(trails)){
trail_polygons[[i]] = sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
}
# Create trail polygon object from trail_coordinates dataframe. Can be looped if gets too long
trail_polygons <-  sp::SpatialPolygons(list(
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][2]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][2]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][2]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][3]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][3]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][3]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][4]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][4]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][4]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][5]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][5]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][5]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][6]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][6]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][6]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][7]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][7]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][7]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][8]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][8]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][8]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][9]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][9]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][9]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][10]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][10]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][10]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][11]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][11]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][11]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][12]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][12]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][12]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][13]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][13]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][13]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][14]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][14]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][14]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][15]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][15]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][15]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][16]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][16]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][16]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][17]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][17]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][17]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][18]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][18]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][18]}"))
))
View(trail_polygons)
# Create trail polygon object from trail_coordinates dataframe. Can be looped if gets too long
trail_polygons2 <-  vector('list', length = length(trails))
for(i in 1:length(trails)){
trail_polygons2[[i]] = sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
}
View(trail_polygons2)
trail_polygons3 <- SpatialPolygons(list(trail_polygons2))
trail_polygons3 <- sp::SpatialPolygons(list(trail_polygons2))
trail_polygons3 <- sp::SpatialPolygons(trail_polygons2)
View(trail_polygons3)
trail_polygons2 <- sp::SpatialPolygons(list(trail_polygons2))
trail_polygons_list <-  vector('list', length = length(trails))
length(trail_polygons_list)
for(i in 1:length(trail_polygons_list)){
trail_polygons_list[[i]] = sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
}
trail_polygons2 <- sp::SpatialPolygons(trail_polygons_list)
# Create trail polygon object from trail_coordinates dataframe. Can be looped if gets too long
trail_polygons <-  sp::SpatialPolygons(list(
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][1]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][2]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][2]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][2]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][3]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][3]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][3]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][4]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][4]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][4]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][5]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][5]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][5]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][6]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][6]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][6]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][7]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][7]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][7]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][8]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][8]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][8]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][9]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][9]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][9]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][10]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][10]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][10]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][11]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][11]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][11]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][12]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][12]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][12]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][13]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][13]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][13]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][14]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][14]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][14]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][15]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][15]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][15]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][16]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][16]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][16]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][17]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][17]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][17]}")),
sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][18]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][18]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][18]}"))
))
# find if collection locations fall within trail polygons
pts <- sp::SpatialPoints(cbind(joined_data %>% dplyr::filter(!is.na(collection_longitude)) %>% .$collection_longitude,
joined_data %>% dplyr::filter(!is.na(collection_latitude)) %>% .$collection_latitude))
# bind trails
fulc_data <- cbind(unname(sp::over(pts, trail_polygons)), joined_data %>%
dplyr::filter(!is.na(collection_longitude) & !is.na(collection_latitude))) %>%
dplyr::rename(collection_trail = 1) %>%
dplyr::rowwise() %>%
dplyr::mutate(collection_trail = glue::glue("{list(unique(trail_coordinates$trail))[[1]][{collection_trail}]}")) %>%
dplyr::ungroup() %>%
dplyr::mutate(collection_trail = ifelse(collection_trail == "NA", NA_character_, collection_trail)) %>% # fix NAs
dplyr::full_join(joined_data) %>% # add back joined_data with NAs for complete collection
dplyr::select(project,
c_label,
s_label,
flag_ambient_temperature,
flag_ambient_temperature_run,
flag_duplicated_c_label_field_sampling,
flag_duplicated_s_label_isolation_s_labeled_plates,
flag_missing_isolation_record,
flag_missing_s_label_isolation_s_labeled_plates,
flag_substrate_temperature,
flag_worms_on_sample_not_recorded,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
exif_gps_latitude,
exif_gps_longitude,
collection_latitude,
collection_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
fulcrum_altitude,
exif_gps_altitude,
collection_altitude,
collection_altitude_method,
collection_location,
collection_island,
collection_trail,
landscape,
sky_view,
ambient_humidity,
substrate,
substrate_notes,
substrate_other,
raw_ambient_temperature,
proc_ambient_temperature,
raw_substrate_temperature,
proc_substrate_temperature,
gridsect,
gridsect_index,
gridsect_radius,
grid_sect_direction,
sample_photo,
sample_photo_caption,
sample_photo_url,
gps_course,
gps_horizontal_accuracy,
gps_speed,
gps_vertical_accuracy,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
approximate_number_of_worms)
View(fulc_data)
# bind trails
fulc_data2 <- cbind(unname(sp::over(pts, trail_polygons2)), joined_data %>%
dplyr::filter(!is.na(collection_longitude) & !is.na(collection_latitude))) %>%
dplyr::rename(collection_trail = 1) %>%
dplyr::rowwise() %>%
dplyr::mutate(collection_trail = glue::glue("{list(unique(trail_coordinates$trail))[[1]][{collection_trail}]}")) %>%
dplyr::ungroup() %>%
dplyr::mutate(collection_trail = ifelse(collection_trail == "NA", NA_character_, collection_trail)) %>% # fix NAs
dplyr::full_join(joined_data) %>% # add back joined_data with NAs for complete collection
dplyr::select(project,
c_label,
s_label,
flag_ambient_temperature,
flag_ambient_temperature_run,
flag_duplicated_c_label_field_sampling,
flag_duplicated_s_label_isolation_s_labeled_plates,
flag_missing_isolation_record,
flag_missing_s_label_isolation_s_labeled_plates,
flag_substrate_temperature,
flag_worms_on_sample_not_recorded,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
exif_gps_latitude,
exif_gps_longitude,
collection_latitude,
collection_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
fulcrum_altitude,
exif_gps_altitude,
collection_altitude,
collection_altitude_method,
collection_location,
collection_island,
collection_trail,
landscape,
sky_view,
ambient_humidity,
substrate,
substrate_notes,
substrate_other,
raw_ambient_temperature,
proc_ambient_temperature,
raw_substrate_temperature,
proc_substrate_temperature,
gridsect,
gridsect_index,
gridsect_radius,
grid_sect_direction,
sample_photo,
sample_photo_caption,
sample_photo_url,
gps_course,
gps_horizontal_accuracy,
gps_speed,
gps_vertical_accuracy,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
approximate_number_of_worms)
View(fulc_data2)
isTRUE( all.equal(fulc_data,fulc_data2) )
setdiff(fulc_data,fulc_data2)
all.equal(fulc_data,fulc_data2)
View(cbind(fulc_data$collection_trail, fulc_data2$collection_trail))
trail_polygons2
# Create trail polygon object from trail_coordinates dataframe. Can be looped if gets too long
trail_polygons_list <-  vector('list', length = length(trails))
for(i in 1:length(trail_polygons_list)){
trail_polygons_list[[i]] = sp::Polygons(list(sp::Polygon(cbind(trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}")) %>% .$longitudes,
trail_coordinates %>% dplyr::filter(trail == glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}")) %>% .$latitudes))),
ID = glue::glue("{list(unique(trail_coordinates$trail))[[1]][i]}"))
}
trail_polygons2 <- sp::SpatialPolygons(trail_polygons_list)
# bind trails
fulc_data2 <- cbind(unname(sp::over(pts, trail_polygons2)), joined_data %>%
dplyr::filter(!is.na(collection_longitude) & !is.na(collection_latitude))) %>%
dplyr::rename(collection_trail = 1) %>%
dplyr::rowwise() %>%
dplyr::mutate(collection_trail = glue::glue("{list(unique(trail_coordinates$trail))[[1]][{collection_trail}]}")) %>%
dplyr::ungroup() %>%
dplyr::mutate(collection_trail = ifelse(collection_trail == "NA", NA_character_, collection_trail)) %>% # fix NAs
dplyr::full_join(joined_data) %>% # add back joined_data with NAs for complete collection
dplyr::select(project,
c_label,
s_label,
flag_ambient_temperature,
flag_ambient_temperature_run,
flag_duplicated_c_label_field_sampling,
flag_duplicated_s_label_isolation_s_labeled_plates,
flag_missing_isolation_record,
flag_missing_s_label_isolation_s_labeled_plates,
flag_substrate_temperature,
flag_worms_on_sample_not_recorded,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
exif_gps_latitude,
exif_gps_longitude,
collection_latitude,
collection_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
fulcrum_altitude,
exif_gps_altitude,
collection_altitude,
collection_altitude_method,
collection_location,
collection_island,
collection_trail,
landscape,
sky_view,
ambient_humidity,
substrate,
substrate_notes,
substrate_other,
raw_ambient_temperature,
proc_ambient_temperature,
raw_substrate_temperature,
proc_substrate_temperature,
gridsect,
gridsect_index,
gridsect_radius,
grid_sect_direction,
sample_photo,
sample_photo_caption,
sample_photo_url,
gps_course,
gps_horizontal_accuracy,
gps_speed,
gps_vertical_accuracy,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
approximate_number_of_worms)
all.equal(fulc_data,fulc_data2)
