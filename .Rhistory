# read genotyping sheet(s)
genotyping_sheet <- NULL
for(i in unique(gsKey)) {
# get project from sheet name
project <- stringr::str_replace(googlesheets4::gs4_get(i)$name,
pattern = "_wild_isolate_genotyping", replacement = "")
# get data from sheet
geno <- googlesheets4::read_sheet(i, range = "genotyping template") %>%
dplyr::filter(!is.na(s_label)) %>%
dplyr::mutate(project_geno = project)
genotyping_sheet <- rbind(genotyping_sheet, geno)
}
# find s_labels in genotyping sheet
slabs <- str_subset(genotyping_sheet$s_label, pattern = "S-")
# filter genotyping sheet by s_labels matching "S-" pattern
unusual_slabs <- genotyping_sheet %>%
dplyr::filter(!(s_label %in% slabs)) %>%
dplyr::pull(s_label)
duplicated_slabs <- genotyping_sheet %>%
dplyr::group_by(s_label) %>%
dplyr::mutate(slab_n = n(),
slab_duplicate = ifelse(slab_n > 1, 1, 0)) %>%
dplyr::ungroup() %>%
dplyr::distinct(s_label, .keep_all = T) %>%
dplyr::filter(slab_duplicate == 1) %>%
dplyr::pull(s_label)
# print warning if duplicates or unusual names found for S-labels
print(paste0("There are ", length(unusual_slabs), " unsual S-label names in genotyping sheet(s) ", unusual_slabs))
# print warning if duplicates or unusual names found for strain names
print(paste0("There are ", length(duplicated_slabs), " duplicated S-label names in genotyping sheet(s) ", duplicated_slabs))
return(genotyping_sheet)
}
# read in genotype data for 2 single projects with loadGenotypes function
genotype_data23 <- loadGenotypes(gsKey = c("1jLmludjZX8_jy1RQ_DPMQ3k-3eZ30GtCAW6LEj_YSVw", "14xvEXbKVej7gnPPaHtCcEHDc6xLbRPfN9ESLXOSLw58")) %>%
dplyr::mutate(project_geno = ifelse(project_geno == "test1", "2019DecemberHawaii",
ifelse(project_geno == "test2", "2020FebruarayAustralia", NA)))
genotype_data3 <- loadGenotypes(gsKey = c("14xvEXbKVej7gnPPaHtCcEHDc6xLbRPfN9ESLXOSLw58")) %>%
dplyr::mutate(project_geno = ifelse(project_geno == "test1", "2019DecemberHawaii",
ifelse(project_geno == "test2", "2020FebruarayAustralia", NA)))
joinFulcGeno <- function(fulc, geno, blast = NULL) {
if(is.null(blast)) {
# Join genotyping sheet with collection and isolation data
# Join genotyping sheet with collection and isolation data
out_dat <- fulc %>%
dplyr::full_join(geno) %>%
# Rename variables
dplyr::rename(project_fulc = project,
collection_id = c_label,
isolation_id = s_label) %>%
# Reorder variables
dplyr::select(project_geno,
project_fulc,
collection_id,
isolation_id,
species_id,
ECA_dirty,
ECA_clean,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_island,
collection_location,
collection_trail,
collection_latitude,
collection_longitude,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
ambient_temperature,
flag_ambient_temperature_run,
ambient_humidity,
substrate_temperature,
altitude,
altitude_method,
altitude_methods_range,
landscape,
sky_view,
substrate,
substrate_other,
substrate_notes,
sample_photo_url,
gridsect,
gridsect_index,
grid_sect_direction,
gridsect_radius,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
proliferation_48,
proliferation_168,
proliferating,
approximate_number_of_worms,
shipment_number,
pcr_product_its2,
pcr_product_ssu,
general_notes,
manual_blast_notes,
possible_new_caeno_sp,
make_strain_name,
reason_strain_not_named)
}
# Join genotyping sheet with collection and isolation data
out_dat <- fulc %>%
dplyr::full_join(geno) %>%
# Rename variables
dplyr::rename(project_id = project,
collection_id = c_label,
isolation_id = s_label)
# Reorder variables
dplyr::select(project_id,
collection_id,
isolation_id,
species_id,
ECA_dirty,
ECA_clean,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_island,
collection_location,
collection_trail,
collection_latitude,
collection_longitude,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
ambient_temperature,
flag_ambient_temperature_run,
ambient_humidity,
substrate_temperature,
altitude,
altitude_method,
altitude_methods_range,
landscape,
sky_view,
substrate,
substrate_other,
substrate_notes,
sample_photo_url,
gridsect,
gridsect_index,
grid_sect_direction,
gridsect_radius,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
proliferation_48,
proliferation_168,
proliferating,
approximate_number_of_worms,
shipment_number,
pcr_product_its2,
pcr_product_ssu,
general_notes,
manual_blast_notes,
possible_new_caeno_sp,
make_strain_name,
reason_strain_not_named)
}
joinFulcGeno <- function(fulc, geno, blast = NULL) {
if(is.null(blast)) {
# Join genotyping sheet with collection and isolation data
# Join genotyping sheet with collection and isolation data
out_dat <- fulc %>%
dplyr::full_join(geno) %>%
# Rename variables
dplyr::rename(project_fulc = project,
collection_id = c_label,
isolation_id = s_label) %>%
# Reorder variables
dplyr::select(project_geno,
project_fulc,
collection_id,
isolation_id,
species_id,
ECA_dirty,
ECA_clean,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_island,
collection_location,
collection_trail,
collection_latitude,
collection_longitude,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
ambient_temperature,
flag_ambient_temperature_run,
ambient_humidity,
substrate_temperature,
altitude,
altitude_method,
altitude_methods_range,
landscape,
sky_view,
substrate,
substrate_other,
substrate_notes,
sample_photo_url,
gridsect,
gridsect_index,
grid_sect_direction,
gridsect_radius,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
proliferation_48,
proliferation_168,
proliferating,
approximate_number_of_worms,
shipment_number,
pcr_product_its2,
pcr_product_ssu,
general_notes,
manual_blast_notes,
possible_new_caeno_sp,
make_strain_name,
reason_strain_not_named)
}
# Join genotyping sheet with collection and isolation data
out_dat <- fulc %>%
dplyr::full_join(geno) %>%
# Rename variables
dplyr::rename(project_fulc = project,
collection_id = c_label,
isolation_id = s_label) %>%
# Reorder variables
dplyr::select(project_geno,
project_fulc,
collection_id,
isolation_id,
species_id,
ECA_dirty,
ECA_clean,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_island,
collection_location,
collection_trail,
collection_latitude,
collection_longitude,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
ambient_temperature,
flag_ambient_temperature_run,
ambient_humidity,
substrate_temperature,
altitude,
altitude_method,
altitude_methods_range,
landscape,
sky_view,
substrate,
substrate_other,
substrate_notes,
sample_photo_url,
gridsect,
gridsect_index,
grid_sect_direction,
gridsect_radius,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
proliferation_48,
proliferation_168,
proliferating,
approximate_number_of_worms,
shipment_number,
pcr_product_its2,
pcr_product_ssu,
general_notes,
manual_blast_notes,
possible_new_caeno_sp,
make_strain_name,
reason_strain_not_named)
}
library(easyfulcrum)
# testing functions
library(tidyverse)
# setup test directory for multi project Fulcrum export
test_dir1 <- "~/Dropbox/AndersenLab/LabFolders/Tim/projects/wild_isolates/data/fulcrum/20200515_fulcrum_data"
# test functions from multi project Fulcrum export
loadFulcrum(test_dir1)
fulcrum_data1 <- procFulcrum(test_dir1)
# setup test directories for single project Fulcrum exports
test_dir2 <- "~/repos/20191201_Hawaii/data/fulcrum"
test_dir3 <- "~/repos/2020FebruaryAustralia/data/fulcrum"
loadFulcrum(test_dir2) # dec hawaii
loadFulcrum(test_dir3) # feb australia
# test procFulcrum function to load and process Fulcrum data
hi2019dec <- procFulcrum(test_dir2)
aus2020feb <- procFulcrum(test_dir3)
# read in genotype data for 2 single projects with loadGenotypes function
genotype_data23 <- loadGenotypes(gsKey = c("1jLmludjZX8_jy1RQ_DPMQ3k-3eZ30GtCAW6LEj_YSVw", "14xvEXbKVej7gnPPaHtCcEHDc6xLbRPfN9ESLXOSLw58")) %>%
dplyr::mutate(project_geno = ifelse(project_geno == "test1", "2019DecemberHawaii",
ifelse(project_geno == "test2", "2020FebruarayAustralia", NA)))
genotype_data3 <- loadGenotypes(gsKey = c("14xvEXbKVej7gnPPaHtCcEHDc6xLbRPfN9ESLXOSLw58")) %>%
dplyr::mutate(project_geno = ifelse(project_geno == "test1", "2019DecemberHawaii",
ifelse(project_geno == "test2", "2020FebruarayAustralia", NA)))
# read in genotype data for 2 single projects with loadGenotypes function
genotype_data23 <- loadGenotypes(gsKey = c("1jLmludjZX8_jy1RQ_DPMQ3k-3eZ30GtCAW6LEj_YSVw", "14xvEXbKVej7gnPPaHtCcEHDc6xLbRPfN9ESLXOSLw58")) %>%
dplyr::mutate(project_geno = ifelse(project_geno == "test1", "2019DecemberHawaii",
ifelse(project_geno == "test2", "2020FebruarayAustralia", NA)))
library(easyfulcrum)
library(easyfulcrum)
# testing functions
library(tidyverse)
# setup test directory for multi project Fulcrum export
test_dir1 <- "~/Dropbox/AndersenLab/LabFolders/Tim/projects/wild_isolates/data/fulcrum/20200515_fulcrum_data"
# test functions from multi project Fulcrum export
loadFulcrum(test_dir1)
fulcrum_data1 <- procFulcrum(test_dir1)
# setup test directories for single project Fulcrum exports
test_dir2 <- "~/repos/20191201_Hawaii/data/fulcrum"
test_dir3 <- "~/repos/2020FebruaryAustralia/data/fulcrum"
loadFulcrum(test_dir2) # dec hawaii
loadFulcrum(test_dir3) # feb australia
# testing functions
library(tidyverse)
# setup test directory for multi project Fulcrum export
test_dir1 <- "~/Dropbox/AndersenLab/LabFolders/Tim/projects/wild_isolates/data/fulcrum/20200515_fulcrum_data"
# test functions from multi project Fulcrum export
loadFulcrum(test_dir1)
fulcrum_data1 <- procFulcrum(test_dir1)
# setup test directories for single project Fulcrum exports
test_dir2 <- "~/repos/20191201_Hawaii/data/fulcrum"
test_dir3 <- "~/repos/2020FebruaryAustralia/data/fulcrum"
loadFulcrum(test_dir2) # dec hawaii
loadFulcrum(test_dir3) # feb australia
# test procFulcrum function to load and process Fulcrum data
hi2019dec <- procFulcrum(test_dir2)
aus2020feb <- procFulcrum(test_dir3)
# read in genotype data for 2 single projects with loadGenotypes function
genotype_data23 <- loadGenotypes(gsKey = c("1jLmludjZX8_jy1RQ_DPMQ3k-3eZ30GtCAW6LEj_YSVw", "14xvEXbKVej7gnPPaHtCcEHDc6xLbRPfN9ESLXOSLw58")) %>%
dplyr::mutate(project_geno = ifelse(project_geno == "test1", "2019DecemberHawaii",
ifelse(project_geno == "test2", "2020FebruarayAustralia", NA)))
genotype_data3 <- loadGenotypes(gsKey = c("14xvEXbKVej7gnPPaHtCcEHDc6xLbRPfN9ESLXOSLw58")) %>%
dplyr::mutate(project_geno = ifelse(project_geno == "test1", "2019DecemberHawaii",
ifelse(project_geno == "test2", "2020FebruarayAustralia", NA)))
genotype_data3 <- loadGenotypes(gsKey = c("14xvEXbKVej7gnPPaHtCcEHDc6xLbRPfN9ESLXOSLw58")) %>%
dplyr::mutate(project_geno = ifelse(project_geno == "test1", "2019DecemberHawaii",
ifelse(project_geno == "test2", "2020FebruarayAustralia", NA)))
# test joinFulcGeno function to join genotype data to fulcrum data
project_data <- joinFulcGeno(fulc = aus2020feb, geno = genotype_data3)
library(easyfulcrum)
# test joinFulcGeno function to join genotype data to fulcrum data
project_data <- joinFulcGeno(fulc = aus2020feb, geno = genotype_data3)
# test joinFulcGeno function to join genotype data to fulcrum data
project_data <- joinFulcGeno(fulc = aus2020feb, geno = genotype_data3)
joinFulcGeno <- function(fulc, geno, blast = NULL) {
if(is.null(blast)) {
# Join genotyping sheet with collection and isolation data
# Join genotyping sheet with collection and isolation data
out_dat <- fulc %>%
dplyr::full_join(geno) %>%
# Rename variables
dplyr::rename(project_fulc = project,
collection_id = c_label,
isolation_id = s_label) %>%
# Reorder variables
dplyr::select(project_geno,
project_fulc,
collection_id,
isolation_id,
species_id,
ECA_dirty,
ECA_clean,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_island,
collection_location,
collection_trail,
collection_latitude,
collection_longitude,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
ambient_temperature,
flag_ambient_temperature_run,
ambient_humidity,
substrate_temperature,
altitude,
altitude_method,
altitude_methods_range,
landscape,
sky_view,
substrate,
substrate_other,
substrate_notes,
sample_photo_url,
gridsect,
gridsect_index,
grid_sect_direction,
gridsect_radius,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
proliferation_48,
proliferation_168,
proliferating,
approximate_number_of_worms,
shipment_number,
pcr_product_its2,
pcr_product_ssu,
general_notes,
manual_blast_notes,
possible_new_caeno_sp,
make_strain_name,
reason_strain_not_named)
}
# Join genotyping sheet with collection and isolation data
out_dat <- fulc %>%
dplyr::full_join(geno) %>%
# Rename variables
dplyr::rename(project_fulc = project,
collection_id = c_label,
isolation_id = s_label) %>%
# Reorder variables
dplyr::select(project_geno,
project_fulc,
collection_id,
isolation_id,
species_id,
ECA_dirty,
ECA_clean,
collection_by,
collection_datetime_UTC,
collection_date_UTC,
collection_local_time,
collection_island,
collection_location,
collection_trail,
collection_latitude,
collection_longitude,
collection_fulcrum_latitude,
collection_fulcrum_longitude,
collection_lat_long_method,
collection_lat_long_method_diff,
ambient_temperature,
flag_ambient_temperature_run,
ambient_humidity,
substrate_temperature,
altitude,
altitude_method,
altitude_methods_range,
landscape,
sky_view,
substrate,
substrate_other,
substrate_notes,
sample_photo_url,
gridsect,
gridsect_index,
grid_sect_direction,
gridsect_radius,
isolation_by,
isolation_datetime_UTC,
isolation_date_UTC,
isolation_local_time,
isolation_latitude,
isolation_longitude,
worms_on_sample,
proliferation_48,
proliferation_168,
proliferating,
approximate_number_of_worms,
shipment_number,
pcr_product_its2,
pcr_product_ssu,
general_notes,
manual_blast_notes,
possible_new_caeno_sp,
make_strain_name,
reason_strain_not_named)
}
# test joinFulcGeno function to join genotype data to fulcrum data
project_data <- joinFulcGeno(fulc = aus2020feb, geno = genotype_data3)
