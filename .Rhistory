library(easyfulcrum)
# tools::buildVignettes(dir = ".", tangle=TRUE)
devtools::build_vignettes()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# install.packages("devtools")
# devtools::install_github("AndersenLab/easyfulcrum")
# setwd("~/Desktop")
library(easyfulcrum)
# makeDirStructure(startdir = "~/Desktop/",
#                  projectdirname = "2020JanuaryHawaii")
dir1 <- "~/Desktop/2020JanuaryHawaii"
# raw_fulc1 <- readFulcrum(dir = dir1)
raw_fulc1 <- easyfulcrum::raw_fulc1
names(raw_fulc1)
proc_fulc1 <- procFulcrum(data = raw_fulc1)
flag1.1 <- checkTemperatures(data = proc_fulc1, return_flags = TRUE)
proc_fulc1_clean <- fixTemperatures(data = proc_fulc1,
substrate_temperature_ids = "a7db618d-44cc-4b4a-bc67-871306029274",
ambient_temperature_ids = "b1f20ae4-c5c2-426f-894a-e1f46c2fa693",
ambient_temperature_run_ids=c("dda77efe-d73c-48e9-aefb-b508e613256b",
"93de14a0-40ab-4793-8614-ab1512ab158c"))
join_fulc1 <- joinFulcrum(data = proc_fulc1)
flag1.2 <- checkJoin(data = join_fulc1, return_flags = TRUE)
anno_fulc1 <- annotateFulcrum(data = join_fulc1, dir = NULL)
# raw_geno1 <- readGenotypes(gsKey = c("1_6u4sk_Zj-Hm5d_058Lg8WYWLe7BZHGTWxXcH6EsDUI"))
raw_geno1 <- easyfulcrum::raw_geno1
head(raw_geno1)
proc_geno1 <- checkGenotypes(geno_data = easyfulcrum::raw_geno1, fulc_data = anno_fulc1,
return_geno = TRUE, return_flags = FALSE)
flag1.3 <- checkGenotypes(geno_data = raw_geno1, fulc_data = anno_fulc1,
return_geno = FALSE, return_flags = TRUE)
join_genofulc1 <- joinGenoFulc(geno = proc_geno1, fulc = anno_fulc1, dir = dir1)
#This chunk of code will move the photos required for this trial run into the appropriate folder for raw photos, according to what `dir1` is specified.
#You can also find these photos for manual download at: https://github.com/AndersenLab/easyfulcrum/tree/master/vignettes/2020JanuaryHawaii_photos
# library(googledrive)
# final_directory <- paste(dir1, "data/raw/fulcrum/photos", sep = "/")
# temp_dir <- tempdir()
# photos <- googledrive::drive_ls(as_id("11T6qzszJ_yK3yRyy4eqBfplZuai20y-g"))
# photos$temp_location <- paste(temp_dir,photos$name, sep = "/")
# photos$final_location <- paste(final_directory,photos$name, sep = "/")
#
# for(i in 1:nrow(photos)){
#   googledrive::drive_download(as_id(photos$id[i]),
#                             path =photos$temp_location[i],
#                             overwrite = TRUE)
#   fs::file_copy(photos$temp_location[i], photos$final_location[i], overwrite = TRUE)
# }
# final_data1 <- procPhotos(dir = dir1, data = join_genofulc1,
#                           max_dim = 500, overwrite = T,
#                           CeNDR = TRUE)
final_data1 <- easyfulcrum::final_data1
head(final_data1)
flag1.4 <- makeSpSheet(data = join_genofulc1,
target_sp = "Caenorhabditis Briggsae", dir = dir1)
file.copy("../R/sampleReport.Rmd", paste(dir1,"scripts",sep = "/"))
rmarkdown::render(paste(dir1,"scripts","sampleReport.Rmd",sep = "/"),
output_dir = paste(dir1,"reports",sep = "/"),
output_format	= "html_document")
stat_df <- df %>%
dplyr::distinct(project, c_label, .keep_all = T) %>%
dplyr::select(project, c_label, s_label, species_id, proc_ambient_temperature,
ambient_humidity, proc_substrate_temperature, collection_altitude) %>%
tidyr::gather(env_par, value, proc_ambient_temperature,ambient_humidity,
proc_substrate_temperature, collection_altitude)
plot_atemp <- ggplot(data = stat_df %>% dplyr::filter(env_par == "proc_ambient_temperature")) +
geom_boxplot(aes(y = value), outlier.color = NA) +
geom_jitter(aes(y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(fill = "Species", x = "", y = "Ambient temperature (째C)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_stemp <- ggplot(data = stat_df %>% dplyr::filter(env_par == "proc_substrate_temperature")) +
geom_boxplot(aes(y = value), outlier.color = NA) +
geom_jitter(aes(y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Substrate temperature (째C)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_ahum <- ggplot(data = stat_df %>% dplyr::filter(env_par == "ambient_humidity")) +
geom_boxplot(aes(y = value), outlier.color = NA) +
geom_jitter(aes(y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Ambient humidity (%)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_elev <- ggplot(data = stat_df %>% dplyr::filter(env_par == "collection_altitude")) +
geom_boxplot(aes(y = value), outlier.color = NA) +
geom_jitter(aes(y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Elevation (m)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
cowplot::plot_grid(plot_atemp, plot_stemp, plot_ahum, plot_elev,
ncol = 2, nrow = 2, align = "hv", axis = "l")
stat_df <- df %>%
dplyr::distinct(project, c_label, .keep_all = T) %>%
dplyr::select(project, c_label, s_label, species_id, proc_ambient_temperature,
ambient_humidity, proc_substrate_temperature, collection_altitude) %>%
tidyr::gather(env_par, value, proc_ambient_temperature,ambient_humidity,
proc_substrate_temperature, collection_altitude)
View(stat_df)
stat_df <- df %>%
dplyr::distinct(project, c_label, .keep_all = T) %>%
dplyr::select(project, c_label, s_label, species_id, proc_ambient_temperature,
ambient_humidity, proc_substrate_temperature, collection_altitude) %>%
tidyr::gather(env_par, value, proc_ambient_temperature,ambient_humidity,
proc_substrate_temperature, collection_altitude)
plot_atemp <- ggplot(data = stat_df %>% dplyr::filter(env_par == "proc_ambient_temperature")) +
geom_boxplot(aes(x = env_par, y = value), outlier.color = NA) +
geom_jitter(aes(x = env_par, y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Ambient temperature (째C)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_stemp <- ggplot(data = stat_df %>% dplyr::filter(env_par == "proc_substrate_temperature")) +
geom_boxplot(aes(x = env_par,y = value), outlier.color = NA) +
geom_jitter(aes(x = env_par,y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Substrate temperature (째C)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_ahum <- ggplot(data = stat_df %>% dplyr::filter(env_par == "ambient_humidity")) +
geom_boxplot(aes(x = env_par, y = value), outlier.color = NA) +
geom_jitter(aes(x = env_par, y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Ambient humidity (%)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_elev <- ggplot(data = stat_df %>% dplyr::filter(env_par == "collection_altitude")) +
geom_boxplot(aes(x = env_par, y = value), outlier.color = NA) +
geom_jitter(aes(x = env_par, y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Elevation (m)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
cowplot::plot_grid(plot_atemp, plot_stemp, plot_ahum, plot_elev,
ncol = 2, nrow = 2, align = "hv", axis = "l")
stat_df <- df %>%
dplyr::distinct(project, c_label, .keep_all = T) %>%
dplyr::select(project, c_label, s_label, species_id, proc_ambient_temperature,
ambient_humidity, proc_substrate_temperature, collection_altitude) %>%
tidyr::gather(env_par, value, proc_ambient_temperature,ambient_humidity,
proc_substrate_temperature, collection_altitude)
plot_atemp <- ggplot(data = stat_df %>% dplyr::filter(env_par == "proc_ambient_temperature")) +
geom_boxplot(aes(x = env_par, y = value, fill = "grey"), outlier.color = NA) +
geom_jitter(aes(x = env_par, y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Ambient temperature (째C)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_stemp <- ggplot(data = stat_df %>% dplyr::filter(env_par == "proc_substrate_temperature")) +
geom_boxplot(aes(x = env_par,y = value), outlier.color = NA) +
geom_jitter(aes(x = env_par,y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Substrate temperature (째C)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_ahum <- ggplot(data = stat_df %>% dplyr::filter(env_par == "ambient_humidity")) +
geom_boxplot(aes(x = env_par, y = value), outlier.color = NA) +
geom_jitter(aes(x = env_par, y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Ambient humidity (%)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
plot_elev <- ggplot(data = stat_df %>% dplyr::filter(env_par == "collection_altitude")) +
geom_boxplot(aes(x = env_par, y = value), outlier.color = NA) +
geom_jitter(aes(x = env_par, y = value, shape = project), size = 1.5, width = .25) +
theme_bw() +
theme(axis.title = element_text(size = 8, color = "black"),
axis.text = element_text(size = 8, color = "black")) +
labs(x = "", y = "Elevation (m)") +
theme(axis.text.x = element_text(size = 9, face = "italic", color = "black"),
axis.text.y = element_text(size = 9, face = "plain", color = "black"),
axis.title.x = element_text(size = 9, face = "bold", color = "black"),
axis.title.y = element_text(size = 9, face = "bold", color = "black"),
plot.margin = unit(c(0,1,1,1), "lines"),
legend.position = "none")
cowplot::plot_grid(plot_atemp, plot_stemp, plot_ahum, plot_elev,
ncol = 2, nrow = 2, align = "hv", axis = "l")
library(easyfulcrum)
devtools::check()
devtools::check()
# tools::buildVignettes(dir = ".", tangle=TRUE)
devtools::build_vignettes()
file.copy(dir("vignettes", full.names=TRUE), "inst/doc", overwrite=TRUE)
library(easyfulcrum)
View(easyfulcrum::raw_geno1)
View(easyfulcrum::raw_fulc1)
View(names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo))
colnames <- nematode_field_sampling_sample_photo <- names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo))
colnames <- nematode_field_sampling_sample_photo <- names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo)))
colnames <- nematode_field_sampling_sample_photo <- names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo)
colnames_nematode_field_sampling_sample_photo <- names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo)
View(colnames_nematode_field_sampling_sample_photo)
/as.data.frame()
?as.data.frame()
names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo) %>%
as.data.frame(col.names = "colnames_nematode_field_sampling_sample_photo") %>%
View()
library(dplyr)
names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo) %>%
as.data.frame(col.names = "colnames_nematode_field_sampling_sample_photo") %>%
View()
names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo) %>%
as.data.frame(colnames = "colnames_nematode_field_sampling_sample_photo") %>%
View()
names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo) %>%
as.data.frame(colnames = c("colnames_nematode_field_sampling_sample_photo")) %>%
View()
list(names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo)) %>%
as.data.frame(colnames = c("colnames_nematode_field_sampling_sample_photo")) %>%
View()
list(names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo)) %>%
as.data.frame(colnames = "colnames_nematode_field_sampling_sample_photo") %>%
View()
list(names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo)) %>%
as.data.frame(colnames = "colnames_nematode_field_sampling_sample_photo") %>%
write.csv("~/Desktop/colnames_nematode_field_sampling_sample_photo")
list(names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo)) %>%
as.data.frame(col.names = "colnames_nematode_field_sampling_sample_photo") %>%
write.csv("~/Desktop/colnames_nematode_field_sampling_sample_photo.csv")
?write.csv
list(names(easyfulcrum::raw_fulc1$nematode_field_sampling_sample_photo)) %>%
as.data.frame(col.names = "colnames_nematode_field_sampling_sample_photo") %>%
write.csv("~/Desktop/colnames_nematode_field_sampling_sample_photo.csv", row.names = FALSE)
list(names(easyfulcrum::raw_fulc1$nematode_field_sampling)) %>%
as.data.frame(col.names = "colnames_nematode_field_sampling") %>%
write.csv("~/Desktop/colnames_nematode_field_sampling.csv", row.names = FALSE)
list(names(easyfulcrum::raw_fulc1$nematode_isolation_photos)) %>%
as.data.frame(col.names = "colnames_nematode_isolation_photos") %>%
write.csv("~/Desktop/colnames_nematode_isolation_photos.csv", row.names = FALSE)
list(names(easyfulcrum::raw_fulc1$nematode_isolation_s_labeled_plates)) %>%
as.data.frame(col.names = "colnames_nematode_isolation_s_labeled_plates") %>%
write.csv("~/Desktop/colnames_nematode_isolation_s_labeled_plates.csv", row.names = FALSE)
list(names(easyfulcrum::raw_fulc1$nematode_isolation)) %>%
as.data.frame(col.names = "colnames_nematode_isolation") %>%
write.csv("~/Desktop/colnames_nematode_isolation.csv", row.names = FALSE)
easyfulcrum::raw_fulc1$nematode_isolation
names(easyfulcrum::raw_fulc1)
list(names(easyfulcrum::raw_fulc1)) %>%
as.data.frame(col.names = "fulcrum_dataframes") %>%
write.csv("~/Desktop/fulcrum_dataframes.csv", row.names = FALSE)
makeDirStructure(startdir = "~/Desktop/",
projectdirname = "2017AugustHawaii")
library(easyfulcrum)
library(easyfulcrum)
makeDirStructure(startdir = "~/Desktop/",
projectdirname = "2017AugustHawaii")
dir1 <- "~/Desktop/2017AugustHawaii"
raw_fulc1 <- readFulcrum(dir = dir1)
library(easyfulcrum)
raw_fulc1 <- readFulcrum(dir = dir1)
# tools::buildVignettes(dir = ".", tangle=TRUE)
devtools::build_vignettes()
library(easyfulcrum)
devtools::document()
devtools::check()
library(easyfulcrum)
makeDirStructure(startdir = "~/Desktop/",
projectdirname = "2017AugustHawaii")
dir1 <- "~/Desktop/2017AugustHawaii"
raw_fulc1 <- readFulcrum(dir = dir1)
names(raw_fulc1)
proc_fulc1 <- procFulcrum(data = raw_fulc1)
# install.packages("devtools")
# devtools::install_github("AndersenLab/easyfulcrum")
# setwd("~/Desktop")
library(easyfulcrum)
dir1 <- "~/Desktop/2020JanuaryHawaii"
# raw_fulc1 <- readFulcrum(dir = dir1)
raw_fulc1 <- easyfulcrum::raw_fulc1
names(raw_fulc1)
proc_fulc1 <- procFulcrum(data = raw_fulc1)
View(raw_fulc1::nematode_field_sampling)
View(raw_fulc1$nematode_field_sampling)
library(easyfulcrum)
makeDirStructure(startdir = "~/Desktop/",
projectdirname = "2017AugustHawaii")
dir1 <- "~/Desktop/2017AugustHawaii"
raw_fulc1 <- readFulcrum(dir = dir1)
names(raw_fulc1)
View(raw_fulc1$nematode_field_sampling)
library(easyfulcrum)
makeDirStructure(startdir = "~/Desktop/",
projectdirname = "2017AugustHawaii")
dir1 <- "~/Desktop/2017AugustHawaii"
raw_fulc1 <- readFulcrum(dir = dir1)
names(raw_fulc1)
proc_fulc1 <- procFulcrum(data = raw_fulc1)
flag1.1 <- checkTemperatures(data = proc_fulc1, return_flags = TRUE)
View(flag1.1)
View(flag1.1$substrate_temperature)
View(flag1.1$ambient_temperature)
View(flag1.1$ambient_temperature_run)
View(flag1.1$substrate_temperature)
View(flag1.1$ambient_temperature)
View(flag1.1$ambient_temperature_run)
proc_fulc1_clean <- fixTemperatures(data = proc_fulc1,
substrate_temperature_ids = "223666e0-deb4-4180-a654-b7c2bb093576",
ambient_temperature_ids = "f30ce23b-284b-40eb-b31e-21e8c099ad32",
ambient_temperature_run_ids=c("373b9f59-c45b-4154-b1cb-2338fd4e6135",
"c887b37a-9fc7-4f8e-899a-37bf0cebc093"))
join_fulc1 <- joinFulcrum(data = proc_fulc1)
library(easyfulcrum)
makeDirStructure(startdir = "~/Desktop/",
projectdirname = "2017AugustHawaii")
dir1 <- "~/Desktop/2017AugustHawaii"
raw_fulc1 <- readFulcrum(dir = dir1)
names(raw_fulc1)
proc_fulc1 <- procFulcrum(data = raw_fulc1)
flag1.1 <- checkTemperatures(data = proc_fulc1, return_flags = TRUE)
proc_fulc1_clean <- fixTemperatures(data = proc_fulc1,
substrate_temperature_ids = "223666e0-deb4-4180-a654-b7c2bb093576",
ambient_temperature_ids = "f30ce23b-284b-40eb-b31e-21e8c099ad32",
ambient_temperature_run_ids=c("373b9f59-c45b-4154-b1cb-2338fd4e6135",
"c887b37a-9fc7-4f8e-899a-37bf0cebc093"))
join_fulc1 <- joinFulcrum(data = proc_fulc1)
library(easyfulcrum)
makeDirStructure(startdir = "~/Desktop/",
projectdirname = "2017AugustHawaii")
dir1 <- "~/Desktop/2017AugustHawaii"
raw_fulc1 <- readFulcrum(dir = dir1)
names(raw_fulc1)
proc_fulc1 <- procFulcrum(data = raw_fulc1)
flag1.1 <- checkTemperatures(data = proc_fulc1, return_flags = TRUE)
proc_fulc1_clean <- fixTemperatures(data = proc_fulc1,
substrate_temperature_ids = "223666e0-deb4-4180-a654-b7c2bb093576",
ambient_temperature_ids = "f30ce23b-284b-40eb-b31e-21e8c099ad32",
ambient_temperature_run_ids=c("373b9f59-c45b-4154-b1cb-2338fd4e6135",
"c887b37a-9fc7-4f8e-899a-37bf0cebc093"))
join_fulc1 <- joinFulcrum(data = proc_fulc1)
flag1.2 <- checkJoin(data = join_fulc1, return_flags = TRUE)
anno_fulc1 <- annotateFulcrum(data = join_fulc1, dir = NULL)
View(anno_fulc1)
unclean <- read.csv("~/Desktop/nematode_field_sampling_unclean.csv")
index_to_add <- read.csv("~/Desktop/2017_gridsect_index.csv")
library(dplyr)
nrow(unclean)
unclean %>% dplyr::left_join(index_to_add) %>% nrow()
index_to_add <- read.csv("~/Desktop/nematode_field_sampling.csv")
library(dplyr)
unclean <- read.csv("~/Desktop/nematode_field_sampling_unclean.csv")
index_to_add <- read.csv("~/Desktop/2017_gridsect_index.csv")
unclean %>% dplyr::left_join(index_to_add) %>% write.csv("~/Desktop/nematode_field_sampling.csv")
library(easyfulcrum)
library(easyfulcrum)
library(dplyr)
makeDirStructure(startdir = "~/Desktop/",
projectdirname = "2017AugustHawaii")
dir1 <- "~/Desktop/2017AugustHawaii"
raw_fulc1 <- readFulcrum(dir = dir1)
names(raw_fulc1)
proc_fulc1 <- procFulcrum(data = raw_fulc1)
flag1.1 <- checkTemperatures(data = proc_fulc1, return_flags = TRUE)
proc_fulc1_clean <- fixTemperatures(data = proc_fulc1,
substrate_temperature_ids = "223666e0-deb4-4180-a654-b7c2bb093576",
ambient_temperature_ids = "f30ce23b-284b-40eb-b31e-21e8c099ad32",
ambient_temperature_run_ids=c("373b9f59-c45b-4154-b1cb-2338fd4e6135",
"c887b37a-9fc7-4f8e-899a-37bf0cebc093"))
join_fulc1 <- joinFulcrum(data = proc_fulc1)
flag1.2 <- checkJoin(data = join_fulc1, return_flags = TRUE)
anno_fulc1 <- annotateFulcrum(data = join_fulc1, dir = NULL)
raw_geno1 <- readGenotypes(gsKey = c("1gx4Q9ntcjHS7HR1eptIQALKTNvVPpTtzB7fVa05mxOc"))
proc_geno1 <- checkGenotypes(raw_geno1, fulc_data = anno_fulc1,
return_geno = TRUE, return_flags = FALSE)
flag1.3 <- checkGenotypes(geno_data = raw_geno1, fulc_data = anno_fulc1,
return_geno = FALSE, return_flags = TRUE)
join_genofulc1 <- joinGenoFulc(geno = proc_geno1, fulc = anno_fulc1, dir = NULL)
devtools::install_github("AndersenLab/easyfulcrum", force = TRUE, build_vignettes=FALSE)
?sp::over()
?case_when
library(easyfulcrum)
devtools::check()
library(easyfulcrum)
#to build package website
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
dir.create("inst/doc")
getwd()
dir.create("inst/rmd")
# run these to document and check functions
devtools::document()
devtools::check()
library(easyfulcrum)
usethis::use_package("rmarkdown")
devtools::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# install.packages("devtools")
# devtools::install_github("AndersenLab/easyfulcrum")
# setwd("~/Desktop")
library(easyfulcrum)
# makeDirStructure(startdir = "~/Desktop/",
#                  projectdirname = "2020JanuaryHawaii")
dir1 <- "~/Desktop/2020JanuaryHawaii"
# raw_fulc1 <- readFulcrum(dir = dir1)
raw_fulc1 <- easyfulcrum::raw_fulc1
names(raw_fulc1)
proc_fulc1 <- procFulcrum(data = raw_fulc1)
flag1.1 <- checkTemperatures(data = proc_fulc1, return_flags = TRUE)
proc_fulc1_clean <- fixTemperatures(data = proc_fulc1,
substrate_temperature_ids = "a7db618d-44cc-4b4a-bc67-871306029274",
ambient_temperature_ids = "b1f20ae4-c5c2-426f-894a-e1f46c2fa693",
ambient_temperature_run_ids=c("dda77efe-d73c-48e9-aefb-b508e613256b",
"93de14a0-40ab-4793-8614-ab1512ab158c"))
join_fulc1 <- joinFulcrum(data = proc_fulc1)
flag1.2 <- checkJoin(data = join_fulc1, return_flags = TRUE)
anno_fulc1 <- annotateFulcrum(data = join_fulc1, dir = NULL)
# raw_geno1 <- readGenotypes(gsKey = c("1_6u4sk_Zj-Hm5d_058Lg8WYWLe7BZHGTWxXcH6EsDUI"))
raw_geno1 <- easyfulcrum::raw_geno1
head(raw_geno1)
proc_geno1 <- checkGenotypes(geno_data = raw_geno1, fulc_data = anno_fulc1,
return_geno = TRUE, return_flags = FALSE)
flag1.3 <- checkGenotypes(geno_data = raw_geno1, fulc_data = anno_fulc1,
return_geno = FALSE, return_flags = TRUE)
join_genofulc1 <- joinGenoFulc(geno = proc_geno1, fulc = anno_fulc1, dir = NULL)
#This chunk of code will move the photos required for this trial run into the appropriate folder for raw photos, according to what `dir1` is specified.
#You can also find these photos for manual download at: https://github.com/AndersenLab/easyfulcrum/tree/master/vignettes/2020JanuaryHawaii_photos
# library(googledrive)
# final_directory <- paste(dir1, "data/raw/fulcrum/photos", sep = "/")
# temp_dir <- tempdir()
# photos <- googledrive::drive_ls(as_id("11T6qzszJ_yK3yRyy4eqBfplZuai20y-g"))
# photos$temp_location <- paste(temp_dir,photos$name, sep = "/")
# photos$final_location <- paste(final_directory,photos$name, sep = "/")
#
# for(i in 1:nrow(photos)){
#   googledrive::drive_download(as_id(photos$id[i]),
#                             path =photos$temp_location[i],
#                             overwrite = TRUE)
#   fs::file_copy(photos$temp_location[i], photos$final_location[i], overwrite = TRUE)
# }
# final_data1 <- procPhotos(dir = dir1, data = join_genofulc1,
#                           max_dim = 500, overwrite = T,
#                           CeNDR = TRUE)
final_data1 <- easyfulcrum::final_data1
head(final_data1)
# flag1.4 <- makeSpSheet(data = final_data1,
#                     target_sp = "Caenorhabditis briggsae", dir = dir1)
generateReport(data = final_data1, dir = dir1)
devtools::check()
